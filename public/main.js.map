{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/nav-bar/nav-bar.component.css","webpack:///./src/app/components/nav-bar/nav-bar.component.html","webpack:///./src/app/components/nav-bar/nav-bar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/pipe/search.pipe.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/input.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-nav-bar></app-nav-bar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { routing } from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { EditorComponent } from './components/editor/editor.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { SearchPipe } from './pipe/search.pipe';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent,\n    NavBarComponent,\n    SearchPipe\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport {NavBarComponent} from \"./components/nav-bar/nav-bar.component\";\nimport {NewProblemComponent} from \"./components/new-problem/new-problem.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'problems',\n    pathMatch: 'full'\n  },\n  {\n    path: 'problems',\n    component: ProblemListComponent,\n  },\n  {\n    path: 'add_new',\n    component: NewProblemComponent\n  },\n  {\n    path: 'problems/:id',\n    component: ProblemDetailComponent,\n  },\n  {\n    path: '**',\n    redirectTo: 'problems'\n  }];\n\nexport const routing = RouterModule.forRoot(routes);\n\n","module.exports = \"@media screen {\\n  #editor {\\n    height: 600px;\\n    width : 600px;\\n  }\\n  .lang-select {\\n    width: 100px;\\n    margin-right: 10px;\\n  }\\n  header .btn {\\n    margin: 0 5px;\\n  }\\n  footer .btn {\\n    margin: 0 5px;\\n  }\\n  .editor-footer, .editor-header {\\n    margin: 10px 0;\\n  }\\n  .cursor {\\n    /*position:absolute;*/ background: rgba(0, 250, 0, 0.5); z-index: 40;\\n    width: 2px !important;\\n  } }\\n\"","module.exports = \"<section>\\n  <header class=\\\"editor-header\\\">\\n    <!-- for select language-->\\n    <!-- when change, call setLanguage(language)-->\\n    <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\"\\n            [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n      {{language}}\\n      </option>\\n    </select>\\n\\n\\n    <!--reset button -->\\n    <!-- Button trigger modal -->\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"> Reset</button>\\n\\n    <!-- Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n             <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n               <span aria-hidden=\\\"true\\\">&times;</span>\\n             </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n          You will lose current code in the editor, are you sure?\\n          </div>\\n\\n          <div class=\\\"modal-footer\\\">\\n           <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"resetEditor()\\\">Reset</button>\\n         </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </header>\\n\\n    <div id=\\\"editor\\\">\\n    </div>\\n\\n  <div>\\n    {{coders}}\\n  </div>\\n  <div>\\n    {{output}}\\n  </div>\\n  <footer class=\\\"editor-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"submit()\\\">Submit Solution</button>\\n  </footer>\\n\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CollaborationService} from '../../services/collaboration.service';\nimport {ActivatedRoute, Params} from \"@angular/router\";\nimport {DataService} from \"../../services/data.service\";\nimport {BehaviorSubject} from \"rxjs/internal/BehaviorSubject\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\n\n\ndeclare var ace:any;\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  languages : string[] = ['Java','Python' ];\n  language : string = 'Java';\n  editor:any;\n  sessionID: string = '';\n  output:string = '';\n  coders: string;\n  subscriptionCoders:Subscription;\n\n  defaultContent = {\n    'Java': ` public class Example {\n        public static void main(String[] args) {\n           // Type your Java code here\n          }\n     }`,\n    'Python': `class Solution: \n      def example():\n        #write your code here: S\n        `,\n  };//use `` to write multi-line text\n\n  constructor(private collaboration:CollaborationService,\n              private  route : ActivatedRoute,\n              private dataService: DataService,\n              ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe( params=> {\n      this.sessionID = params['id'];\n      console.log('initEditor called');\n      this.initEditor();\n    });\n\n    this.collaboration.restoreBuffer();\n\n  }\n\n  initEditor ():void {\n    this.editor = ace.edit(\"editor\");\n    this.editor.setTheme(\"ace/theme/eclipse\");\n    this.resetEditor();\n\n    document.getElementsByTagName('textarea')[0].focus();//光标锁定editor\n\n    this.subscriptionCoders = this.collaboration.onInit(this.editor, this.sessionID)\n      .subscribe(coders=> {\n        this.coders= coders;\n      });\n\n    this.editor.lastAppliedChange = null;  //自动获取,不需要update\n\n    //下面这个是在editor主动变的, 然后\n    this.editor.on('change', (e)=>{   //e: evant, an object. event based program,只要开始,如果不去取消,就会一直去监听,一有变化就回去做下面的这些事情\n      console.log('last change on editor: '+JSON.stringify(e));\n      if (this.editor.lastAppliedChange != e) {  //这里避免了回传\n        console.log(\"different changes applied\");\n        this.collaboration.change(JSON.stringify(e));\n      }else{\n        console.log(\"same change as last one, ignored\");\n      }\n    })\n  }\n  resetEditor():void {\n    this.editor.setValue(this.defaultContent[this.language]); //todo注意这里调用array[i]的写法\n    this.editor.getSession().setMode(\"ace/mode/\" + this.language.toLowerCase());\n\n  }\n  setLanguage (language:string):void {\n    this.language = language;\n    this.resetEditor();\n  }\n\n  submit ():void {\n    let user_code = this.editor.getValue();\n\n    const data = {\n      code: user_code,\n      lang: this.language.toLowerCase()\n    }\n    console.log(data)\n    //将data发送给后端,同时将response在前段显示出来\n    this.dataService.buildAndRun(data).then(res => this.output = res);\n  }\n\n}\n\n/*终于弄明白顺序了:\n总: 发送(emit)一个\"change\" event给server:\n\neditor.component.ts -> initEditor-> this.editor.on监听->如果editor发生->call this.collaboration.change\n->来到了collaboration.service.ts -> call change()->this.collaborationSocket.emit(\"change\", delta)\n->来到了editorSocketService-> socket.on('change'...注意这个文件在启动server的时候已经读过了,所以这个on一直在工作等待'change')\n->31行 io.to(participants[i]).emit(\"change\", delta)->回到collaboration.service\n->20行 this.collaborationSocket.on(\"change\"...)->写入change->结束\n*/\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\">Online Judgement</a>\\n    <ul class=\\\"nav navbar-nav\\\" routerLinkActive=\\\"active\\\">\\n      <li class=\\\"nav-item active\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/problems\\\">Problem List</a></li>\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/add_new\\\">Add Problem</a></li>\\n\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\"\\n               placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" [formControl]=\\\"searchBox\\\">\\n        <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n      </form>\\n\\n    </ul>\\n  </nav>\\n\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\n\nimport { FormControl } from '@angular/forms';\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {debounceTime} from \"rxjs/operators\";\nimport {InputService} from \"../../services/input.service\";\n\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n  //searchBox  = new FormControl(); //这样也可以貌似\n  searchBox: FormControl = new FormControl();\n  subscription: Subscription;\n\n  constructor(private input: InputService, private router: Router) { }\n\n  ngOnInit() {\n    this.subscription = this.searchBox.valueChanges.pipe(debounceTime(200)).subscribe(\n      term => {\n        this.input.changeInput(term);\n      }\n    )\n  }\n\n  ngOnDestroy () {\n    this.subscription.unsubscribe();\n  }\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n             name=\\\"problemName\\\" placeholder=\\\"Input problem name\\\" required\\n             [(ngModel)]=\\\"newProblem.name\\\"> </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemDesc\\\">Problem Description</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n             name=\\\"problemDesc\\\" placeholder=\\\"Input description\\\" required\\n             [(ngModel)]=\\\"newProblem.desc\\\"> </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"difficulty\\\">Difficulty</label>\\n      <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n              [(ngModel)]=\\\"newProblem.difficulty\\\">\\n        <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n          {{difficulty}}\\n        </option>\\n      </select>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addProblem()\\\">Add problem</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({ id: 0,\n  name: '',\n  desc: '',\n  difficulty: 'easy'\n})\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n  difficulties: string[] = ['easy', 'medium', 'hard', 'super'];\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n  }\n  //之所以能得到这个newProblem是因为前端有一个ngmodel绑定了上面三个field, 因为two way binding\n  //所以ts里面就能立刻更新得到这个值, 等于说每次进来先建立一个空的object, 然后通过前端改写改变对应field的值\n  //然后再call完addproblem这个service以后再次清空这个object\n  addProblem () {\n    this.dataService.addProblem(this.newProblem);\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class = \\\"col-sm-12 col-md-4\\\">\\n    <div>\\n      <h2>\\n        {{problem.id}}. {{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n\\n\\n    </div>\\n    <div class = \\\"hidden-xs col-sm-12 col-md-8\\\">\\n      <app-editor></app-editor>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n\n  constructor(private dataService: DataService, private route: ActivatedRoute) {}\n  //activatedroute作用是当前激活的page, 用于得到当前路径的信息\n  ngOnInit() {\n    this.route.params.subscribe(params => { //监听route.params,将resolve的值用作后面的这个方程\n      console.log(params); //params就是/id的这个数字\n      this.dataService.getProblem(+params['id'])\n        .then(problem => this.problem = problem);\n    });\n  }\n\n}\n","module.exports = \".difficult {\\n  min-width: 65px;\\n  margin-right: 18px;\\n}\\n.badge.difficulty {\\n  padding-top: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n.title {\\n  font-size: 1.2em;\\n}\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n.diff-medium {\\n  background-color: #92cf5c;\\n}\\n.diff-hard {\\n  backgroud-color: #FF0000;\\n}\\n.diff-super{\\n  background-color: #8d16e2;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of (problems| search: searchTerm) \\\"\\n       [routerLink] = \\\"['/problems', problem.id]\\\">\\n    <span class=\\\"{{'pull-left badge difficulty diff-' +problem.difficulty.toLocaleLowerCase()}}\\\">\\n      {{problem.difficulty}}\\n    </span>\\n      <strong class=\\\"title\\\">\\n        {{problem.id}}. {{problem.name}}\\n      </strong>\\n    </a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Problem} from '../../models/problem.model';\nimport {DataService} from '../../services/data.service';\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {InputService} from \"../../services/input.service\";\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit, OnDestroy {\n  problems: Problem[];\n  subscriptionProblems : Subscription;\n  subscriptionInput: Subscription;\n  searchTerm : string = '';\n\n  constructor(private dataService: DataService, private inputService: InputService) { }\n\n  ngOnInit() {//因为我对你这两个数据感兴趣,所以起来的时候我就开始监听你们的变化\n    this.getProblems();\n    this.getSearchTerm();\n  }\n\n  ngOnDestroy() {\n    this.subscriptionProblems.unsubscribe();\n  }\n\n  getProblems () {\n    this.subscriptionProblems = this.dataService.getProblems()\n      .subscribe(problems => {this.problems = problems})\n  }\n\n  getSearchTerm ():void {\n    this.subscriptionInput = this.inputService.getInput()\n      .subscribe(inputTerm => this.searchTerm = inputTerm  // 这个地方不加括号为什么就可以\n    );\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {Problem} from \"../models/problem.model\";\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(problems : Problem[], term:string): any {\n    console.log(problems);\n    console.log(term);\n\n    return problems.filter(problems =>\n      problems.name.toLowerCase().includes(term)  //todo: 这里加上大括号和没有大括号是否一样? =>加上就不显示list了\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs/internal/Observable\";\nimport { Subject} from 'rxjs';\ndeclare var io :any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n  collaborationSocket : any;\n  private _allCoders = new Subject<string>();\n  constructor() { }\n\n\n  onInit (editor: any, sessionId: string):Observable<string> {  //与服务器\"握手\" 这个方程定义了当server收到请求时做出的反应\n    //this.collaborationSocket = io(window.location.origin, {query: 'message = hahaha'});//建立socket\n    this.collaborationSocket = io(window.location.origin, {query: 'sessionId=' +sessionId });\n\n    this.collaborationSocket.on(\"message\", (message) => {   //当...发生的时候, 如当我收到message的时候\n      console.log('this is client, and message from server : ' + message);\n    });\n\n    this.collaborationSocket.on(\"change\", (delta:string) =>{ //todo: 这个是怎么用的=>这里就server定义的event\n      //通过调试发现这个是其他socketid跟着编辑后的socketid动的, 被动\n      console.log('colleboration editor changed by : '+ delta);\n      delta = JSON.parse(delta);  //change string to an object\n      editor.lastAppliedChange = delta;\n      editor.getSession().getDocument().applyDeltas([delta]); //真正写入editor\n    });\n\n    this.collaborationSocket.on(\"coderChange\", (data:string) =>{\n      console.log('current coders in this session is:' + data);\n      this._allCoders.next(data.toString());\n\n    })\n     return this._allCoders.asObservable();\n\n  };\n\n  change (delta:string):void {  //todo: 猜想,这个emit是不是发给了上面的20行 .on(\"change\")?\n    //通过调试发现这个不是跟着上面on的, 这个是editor.component里53行传过来的, 然后发到emit, 执行了\n    //ace的一大堆代码,然后结束, 紧接着另一个窗口的20行开始执行,跟着\"被动\"输入值\n    //注意, 13-19行在被动的时候并没有被call, 所以event driven不是从oninit开始, 而是直接从on(\"event\")开始\n\n    this.collaborationSocket.emit(\"change\", delta);\n\n  }\n\n\n\n  restoreBuffer ():void {\n    this.collaborationSocket.emit(\"restoreBuffer\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Problem} from '../models/problem.model';\nimport { HttpClient, HttpResponse, HttpHeaders} from '@angular/common/http';\nimport { Observable} from 'rxjs';\nimport { BehaviorSubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private _problemResource = new BehaviorSubject<Problem[]>([])\n  constructor(private httpClient: HttpClient) { }\n\n  //todo: 这个方程能不能像下面那个改写,是不是一定要先变成behaviorsubject再变回observable? 下面那个为什么不用behaviorsubject\n  //我的想法是: behaviorsubject是有初始值的,我们要得到所有problem, 如果只用observable就有可能遇到需要刷新一下才出数据的可能\n\n  //note:subject是multicast的。记得我们讲过的例子就是好像听演唱会，你什么时候入场，什么时候开始听。有初始值\n  //observable像是听CD，你订阅后从头开始听。可以根据需要进行选择。没有初始值\n  getProblems (): Observable<Problem[]> {\n    this.httpClient.get('api/v1/problems')  //get will return an observable\n      .toPromise()\n      .then( (res:any) => {\n        this._problemResource.next(res);\n      })\n      .catch(this.handleError);\n\n    return this._problemResource.asObservable();\n  }\n\n  getProblem (id: number): Promise<Problem> {\n    return this.httpClient.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then ( (res:any) => res)\n      .catch(this.handleError);\n  }\n\n  addProblem (problem: Problem) {\n    const option = {headers: new HttpHeaders({'Content-Type' : 'application/json'})};\n\n    return this.httpClient.post('api/v1/problems',problem, option)\n      .toPromise()\n      .then ( (res:any) => {\n        this.getProblems();\n        return res; //这个res是服务器传回的新建的这个包含id, name, disc和各种乱七八糟的信息的object, 真正需要返回的东西\n      })\n      .catch(this.handleError);\n  }\n\n\n\n  //这里想rest.js服务里面发送这个解析后的data\n  buildAndRun(data) : Promise<any>{\n    const option = {headers: new HttpHeaders({'Content-Type' : 'application/json'})};\n    return this.httpClient.post('api/v1/build_and_run', data, option)\n      .toPromise()\n      .then( (res:any)=>{\n        console.log('the result we got is: '+res);\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n\n\n\n\n  private handleError (error: any): Promise<any>{\n      console.log('data.service.ts handleError called');\n      return Promise.reject(error.body || error);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject} from \"rxjs/internal/BehaviorSubject\";\nimport {Observable} from \"rxjs/internal/Observable\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputService {\n private inputSubject$ = new BehaviorSubject<string>('');\n  constructor() { }\n\n  changeInput (term) {\n    this.inputSubject$.next(term);\n  }\n\n  getInput ():Observable<string> {\n    return this.inputSubject$.asObservable();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}